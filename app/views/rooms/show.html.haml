.row
  .col-md-12
    %div{"class" => "row", "id" => "dataChannelRow"}
      %div{"class" => "col-md-4 col-md-offset-3"}
        %div{"class" => "panel panel-default"}
          .panel-body
            %input{"id" => "txtChannelID", "type" => "text", "value" =>"channel"}
            %button{"id" => "btnCreateChannel"} Create
            %button{"id" => "btnJoinChannel"} Join

%div{"class" => "row", "id" => "videosRow"}
  %div{"class" => "col-md-8"}
    .row
      %div{"class" => "col-md-3 col-md-offset-3"}
        %div{"id" => "videosContainer"}
          %div{"id" => "subscribersDiv"}
          %div{"id" => "myPublisherDiv"}
  %div{"class" => "col-md-4"}
    .row
      %div{"class" => "col-md-12"}
        %div{"id" => "history"}
          %section{"class" => "sect"}
            %textarea{"id" => "txtMsg", "rows" => "3", "cols" => "50", "placeholder" => "Hit Enter key to send your message..."}
            %br
            %input{"type" => "file", "id" => "files", "name" => "files[]", "disabled" => "" }

            %div{"id" => "file-progress"}
  

:javascript
  var apiKey = '45173502';
  var sessionId = "#{@room.session_id}"
  var token = '#{@opentTok_token}';

  // Create a session object
  var session = OT.initSession(apiKey, sessionId); 
  

  //Every time someone publishes an audio-video stream to the session you are connected to, the Session object dispatches a streamCreated event.
  var msgHistory = document.querySelector("#history");
  session.on(
  { 
    streamCreated: function(event) { 
    				session.subscribe(event.stream, 'subscribersDiv', {insertMode: 'append'}); 
          		    }
    ,"signal:chat": function(event){ 
       var msg = document.createElement("p");
       msg.innerHTML = event.data;
       msgHistory.appendChild(msg);
       msg.scrollIntoView();
      }
  });

  //To send messages
  var txtMsg = document.querySelector("#txtMsg")
  
  $("#txtMsg").keydown(function(event){
    if(event.keyCode == 13){
      session.signal({
        type: "chat",
        data: txtMsg.value
      }, function(error){
       if(error){
          console.log("signal error (" + error.code + "): " + error.message);
        }else{
          txtMsg.value = "";
         }
       }
      );
    }
  }).focus(function(){
    this.value = "";
  }).blur(function(){
    if(this.value == ""){
      this.attr("placeholder", "Hit Enter key to send your message...");
    }
  });

  // connect to the session
  session.connect(token, function(error) {
   if (error) {
     console.log(error.message);
   } else {
     session.publish('myPublisherDiv', {width: 161, height: 121}); 
   } 
  });